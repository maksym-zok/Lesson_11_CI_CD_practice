apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app_name }}
  labels:
    app: {{ .Values.app_name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app_name }}
    spec:
      containers:
        - name: {{ .Values.app_name }}
          image: "637423460784.dkr.ecr.us-east-1.amazonaws.com/devops:{{ .Values.app_tag }}"
          ports:
            - containerPort: {{ .Values.app_port }}
          volumeMounts:
            - mountPath: /home/node/app/.env
              name: config
              subPath: .env
          env:
            - name: SQL_USERNAME
              value: postgres
            - name: SQL_HOST
              value: "{{ .Release.Name }}-postgresql"
            - name: SQL_DATABASE_NAME
              value: postgres
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgresql"
                  key: postgres-password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app_name }}
                  key: JWT_SECRET
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app_name }}
                  key: SMTP_USERNAME
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app_name }}
                  key: SMTP_PASSWORD
      volumes:
        - name: config
          configMap:
            name: {{ .Values.app_name }}